{"version":3,"sources":["calculate/calculus.js","components/graph.js","components/body.js","components/form.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["euler","f","h","k","x","y","points","push","step","parseFloat","i","Math","reverse","pointsNeg","concat","int","funcion","integral","toString","console","log","p","require","Graph","_this$props","this","props","data","react_default","a","createElement","victory_chart","animate","duration","domain","theme","VictoryTheme","material","style","parent","maxWidth","victory_line","stroke","strokeWidth","Component","defaultProps","color","svgHeight","svgWidth","Body","dataPoints","Container","marginTop","Row","Col","graph","sm","Badge","backgroundColor","react_katex","math","function","FxForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calculate","bind","assertThisInitialized","state","showGraph","undefined","error","parsed","setState","toTex","_this2","Jumbotron","Form","Group","as","controlId","Label","column","Control","isInvalid","placeholder","size","value","onChange","e","target","id","type","min","max","variant","Button","onClick","body_Body","Main","Navbar","bg","expand","Brand","href","App","className","main_Main","components_form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d7b55cc.chunk.js","sourcesContent":["import * as Math from \"mathjs\";\nMath.import(require(\"mathjs-simple-integral\"));\nexport function euler(f, h, k) {\n  var x = [];\n  var y = [];\n  x[0] = 0;\n  y[0] = 0;\n  var points = [];\n\n  points.push({ x: x[0], y: y[0] });\n  var step = parseFloat(h);\n  for (var i = 0; i <= 50; i++) {\n    x[i + 1] = x[i] + step;\n    y[i + 1] = y[i] + step * Math.eval(f, { y: y[i], x: x[i], k: k });\n    points.push({ x: x[i + 1], y: y[i + 1] });\n  }\n  points.reverse();\n  var pointsNeg = [];\n  for (i = 0; i <= 50; i++) {\n    x[i + 1] = x[i] - step;\n    y[i + 1] = y[i] - step * Math.eval(f, { y: y[i], x: x[i], k: k });\n    pointsNeg.push({ x: x[i + 1], y: y[i + 1] });\n  }\n  points = points.concat(pointsNeg);\n\n  var int = Math.integral(f, \"x\");\n  var funcion = [];\n  var integral = [];\n\n  for (i = -10; i <= 10; i += 0.5) {\n    funcion.push({ x: i, y: Math.eval(f, { x: i, k: k }) });\n    integral.push({ x: i, y: Math.eval(int.toString(), { x: i, k: k }) });\n  }\nconsole.log(funcion);\n  var result = {\n    p: points,\n    f: funcion,\n    i: integral\n  };\n  return result;\n}\n","import React, { Component } from \"react\";\nimport { VictoryLine, VictoryChart, VictoryTheme } from \"victory\";\nclass Graph extends Component {\n  render() {\n    const { data, integral, funcion } = this.props;\n    return (\n      <div>\n        {data ? (\n          <div>\n            <VictoryChart\n              animate={{ duration: 1000 }}\n              domain={{ x: [-20, 20], y: [-20, 20] }}\n              theme={VictoryTheme.material}\n              style={{ parent: { maxWidth: \"110%\" } }}\n            >\n              <VictoryLine\n                data={funcion}\n                style={{\n                  data: {\n                    stroke: \"#ddbbaa\", // <-------\n                    strokeWidth: 0.5\n                  }\n                }}\n              />\n              <VictoryLine\n                data={data}\n                style={{\n                  data: {\n                    stroke: \"#f24f4f\", // <-------\n                    strokeWidth: 2\n                  }\n                }}\n              />\n              <VictoryLine\n                data={integral} \n                style={{\n                  data: {\n                    stroke: \"#93cc93\", // <-------\n                    strokeWidth: 0.5\n                  }\n                }}\n              />\n            </VictoryChart>\n          </div>\n        ) : (\n          \"-\"\n        )}\n      </div>\n    );\n  }\n}\n\nGraph.defaultProps = {\n  data: [],\n  color: \"#ff4500\",\n  svgHeight: 200,\n  svgWidth: 600\n};\nexport default Graph;\n","import React, { Component } from \"react\";\nimport { Badge, Col, Container, Row } from \"react-bootstrap\";\nimport Graph from \"./graph\";\nimport \"katex/dist/katex.min.css\";\nimport { InlineMath } from \"react-katex\";\nexport default class Body extends Component {\n  render() {\n    var { dataPoints } = this.props;\n    return (\n      <div>\n        {dataPoints ? (\n          <Container style={{ marginTop: 50 }}>\n            <Row>\n              <Col>\n                <Graph data={dataPoints.p} integral={dataPoints.i} funcion={dataPoints.f} />\n              </Col>\n              <Col sm=\"4\">\n                <h5>Color References:</h5>\n                <Badge style={{ backgroundColor: \"#ddbbaa\" }}>Función</Badge>\n                <br />\n                <Badge style={{ backgroundColor: \"#93cc93\" }}>\n                  Integral Analitica\n                </Badge>\n                <br />\n                <Badge style={{ backgroundColor: \"#f24f4f\" }}>\n                  Integral - aproximación EULER\n                </Badge>\n                <br />\n                <h6>\n                  Función: <InlineMath math={this.props.function} />\n                </h6>\n                <h6>\n                  Integral: <InlineMath math={this.props.integral} />\n                </h6>\n              </Col>\n            </Row>\n          </Container>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { euler } from \"../calculate/calculus\";\nimport * as Math from \"mathjs\";\nimport {\n  Form,\n  Container,\n  Button,\n  Row,\n  Col,\n  Badge,\n  Jumbotron\n} from \"react-bootstrap\";\nimport Body from \"./body\";\nMath.import(require(\"mathjs-simple-integral\"));\nclass FxForm extends Component {\n  constructor(props) {\n    super(props);\n    this.calculate = this.calculate.bind(this);\n    this.state = {\n      showGraph: false,\n      f: \"x\",\n      h: 0.1, //default\n      k: 1,\n      dataPoints: undefined,\n      error: false,\n      integral: \"\",\n      parsed: \"\"\n    };\n  }\n  calculate() {\n    try {\n      this.setState({\n        dataPoints: euler(this.state.f, this.state.h, this.state.k),\n        parsed: Math.simplify(Math.parse(this.state.f)).toTex(),\n        integral: Math.simplify(Math.integral(this.state.f, \"x\")).toTex()\n      });\n      this.setState({ error: false });\n    } catch (error) {\n      console.log(error);\n      this.setState({ error: true });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Container style={{ marginTop: 20 }}>\n          <Jumbotron>\n            <Form>\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"1\">\n                  dx/dt:\n                </Form.Label>\n                <Col sm=\"4\">\n                  <Form.Control\n                    isInvalid={this.state.error}\n                    placeholder=\"dx/dt\"\n                    size=\"sm\"\n                    value={this.state.f}\n                    onChange={e => this.setState({ f: e.target.value })}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"1\">\n                  h:\n                </Form.Label>\n                <Col sm=\"4\">\n                  <Form.Control\n                    placeholder=\"h\"\n                    size=\"sm\"\n                    value={this.state.h}\n                    onChange={e => this.setState({ h: e.target.value })}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"1\">\n                  K:\n                </Form.Label>\n                <Col sm=\"1\">\n                  <input\n                    id=\"typeinp\"\n                    type=\"range\"\n                    min=\"-5\"\n                    max=\"5\"\n                    value={this.state.k}\n                    onChange={e => {\n                      this.setState({ k: e.target.value });\n                    }}\n                    step=\"1\"\n                  />\n                </Col>\n                <Col sm=\"2\">\n                  <Badge variant=\"secondary\">K = {this.state.k}</Badge>\n                </Col>\n              </Form.Group>\n              <Button variant=\"primary\" onClick={this.calculate}>\n                Graph!\n              </Button>\n            </Form>\n          </Jumbotron>\n          <Body\n            dataPoints={this.state.dataPoints}\n            function={this.state.parsed}\n            integral={this.state.integral}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\nexport default FxForm;\n","import React, { Component } from \"react\";\nimport {\n  Navbar\n} from \"react-bootstrap\";\nexport default class Main extends Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">EULER Simulation</Navbar.Brand>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport FxForm from './components/form.js';\nimport Main from './components/main';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main></Main>\n        <FxForm></FxForm>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}